{
    "title": "How Does the Internet work?",
    "contents": [
        {
            "subTitle": "1. Introduction",
            "content": [
                "How does the Internet work? Good question!",
                "The Internet's growth has become explosive and it seems impossible to escape the bombardment of www.com's seen constantly on television, heard on radio, and seen in magazines.",
                "Because the Internet has become such a large part of our lives, a good understanding is needed to use this new tool most effectively.", 
                "This whitepaper explains the underlying infrastructure and technologies that make the Internet work.",
                "It does not go into great depth, but covers enough of each area to give a basic understanding of the concepts involved.",
                "For any unanswered questions, a list of resources is provided at the end of the paper.",
                "Any comments, suggestions, questions, etc. are encouraged and may be directed to the author at rshuler@gobcg.com."
            ]
        },
        {
            "subTitle": "2. Where to Begin? Internet Addresses",
            "content": [
                "인터넷은 컴퓨터의 글로벌 네트워크이기 때문에 인터넷에 연결된 각 컴퓨터에는 고유한 주소가 있어야 합니다.",
                "인터넷 주소는 nnn.nnn.nnn.nnn 형식입니다. 여기서 nnn은 0 - 255 사이의 숫자여야 합니다.",
                "이 주소를 IP 주소라고 합니다. IP는 인터넷 프로토콜의 약자이며 나중에 더 설명해줄께",
                "아래 그림은 인터넷에 연결된 두 대의 컴퓨터를 보여줍니다. IP 주소가 1.2.3.4인 컴퓨터와 IP 주소가 5.6.7.8인 다른 컴퓨터.",
                "인터넷은 그 사이에 있는 추상적인 객체로 표현된다.",
                "(본 논문이 진행됨에 따라 인터넷의 세부 사항이 노출됨에 따라 다이어그램 1의 인터넷 부분에 대해 설명하고 여러 번 다시 그릴 것입니다.)",
                "인터넷 서비스 제공업체(ISP)를 통해 인터넷에 연결하는 경우, 일반적으로 전화 접속 세션 동안 임시 IP 주소가 할당됩니다.",
                "LAN(Local Area Network)에서 인터넷에 연결하는 경우 컴퓨터에 영구 IP 주소가 있을 수 있습니다. 또는 DHCP(Dynamic Host Configuration Protocol) 서버에서 임시 주소를 얻을 수 있습니다.",
                "어쨌든 인터넷에 연결되어 있으면 컴퓨터에는 고유한 IP 주소가 있습니다."
            ],
            "table": {
                "header": ["Check It Out - The Ping Program"],
                "content": [
                    "Microsoft Windows 또는 Unix 계열을 사용 중이고 인터넷에 연결되어 있는 경우, 인터넷에 있는 컴퓨터가 살아 있는지 확인하는 편리한 프로그램이 있습니다.",
                    "그것은 아마도 오래된 잠수함 소나 시스템에서 나는 소리를 따서 핑이라고 합니다.",
                    "1 Windows를 사용하는 경우 명령 프롬프트 창을 시작합니다. 유닉스 계열을 사용하는 경우 명령 프롬프트로 이동합니다.",
                    "ping www.yahoo.com을 입력합니다. ping 프로그램은 'ping'을 보냅니다. (실제로 ICMP(Internet Control Message Protocol) 에코 요청 메시지)를 명명된 컴퓨터에 전송합니다.",
                    "ping된 컴퓨터는 응답으로 응답합니다. ping 프로그램은 응답이 돌아올 때까지 만료된 시간을 계산합니다(그렇다면).", 
                    "또한 IP 주소 대신 도메인 이름(예: www.yahoo.com)을 입력하면, ping은 도메인 이름을 확인하고 컴퓨터의 IP 주소를 표시합니다.",
                    "나중에 도메인 이름 및 주소 확인에 대해 자세히 설명합니다."]
            },
            "isHaveImage": true
        },
        {
            "subTitle": "3. Protocol Stacks and Packets",
            "content": [
                "So your computer is connected to the Internet and has a unique address.",
                "How does it 'talk' to other computers connected to the Internet?",
                "An example should serve here: Let's say your IP address is 1.2.3.4 and you want to send a message to the computer 5.6.7.8.",
                "The message you want to send is \"Hello computer 5.6.7.8!\".",
                "Obviously, the message must be transmitted over whatever kind of wire connects your computer to the Internet.",
                "Let's say you've dialed into your ISP from home and the message must be transmitted over the phone line.",
                "Therefore the message must be translated from alphabetic text into electronic signals, transmitted over the Internet, then translated back into alphabetic text.",
                "How is this accomplished? Through the use of a protocol stack.",
                "Every computer needs one to communicate on the Internet and it is usually built into the computer's operating system (i.e. Windows, Unix, etc.).",
                "The protocol stack used on the Internet is refered to as the TCP/IP protocol stack because of the two major communication protocols used.",
                "The TCP/IP stack looks like this",
                "[테이블자리]",
                "If we were to follow the path that the message \"Hello computer 5.6.7.8!\" took from our computer to the computer with IP address 5.6.7.8, it would happen something like this:",
                "1. The message would start at the top of the protocol stack on your computer and work it's way downward.",
                "2. If the message to be sent is long, each stack layer that the message passes through may break the message up into smaller chunks of data.\\n This is because data sent over the Internet (and most computer networks) are sent in manageable chunks.\\n On the Internet, these chunks of data are known as packets.",
                "3. The packets would go through the Application Layer and continue to the TCP layer.\\n Each packet is assigned a port number.\\n Ports will be explained later, but suffice to say that many programs may be using the TCP/IP stack and sending messages.\\n We need to know which program on the destination computer needs to receive the message because it will be listening on a specific port.",
                "4. After going through the TCP layer, the packets proceed to the IP layer.\\n This is where each packet receives it's destination address, 5.6.7.8.",
                "5. Now that our message packets have a port number and an IP address, they are ready to be sent over the Internet.\\n The hardware layer takes care of turning our packets containing the alphabetic text of our message into electronic signals and transmitting them over the phone line.",
                "6. On the other end of the phone line your ISP has a direct connection to the Internet.\\n The ISPs router examines the destination address in each packet and determines where to send it.\\n Often, the packet's next stop is another router.\\n More on routers and Internet infrastructure later.",
                "7. Eventually, the packets reach computer 5.6.7.8. Here, the packets start at the bottom of the destination computer's TCP/IP stack and work upwards.",
                "8. As the packets go upwards through the stack, all routing data that the sending computer's stack added (such as IP address and port number) is stripped from the packets.",
                "9. When the data reaches the top of the stack, the packets have been re-assembled into their original form, \"Hello computer 5.6.7.8!\""
            ],
            "table": {
                "header": ["Protocol Layer", "Comments"],
                "content": [
                    ["Application Protocols Layer,", "Protocols specific to applications such as WWW, e-mail, FTP, etc."], 
                    ["Transmission Control Protocol Layer",	"TCP directs packets to a specific application on a computer using a port number."],
                    ["Internet Protocol Layer",	"IP directs packets to a specific computer using an IP address."],
                    ["Hardware Layer",	"Converts binary packet data to network signals and back. (E.g. ethernet network card, modem for phone lines, etc.)"]
                ]
            },
            "isHaveImage": true
        },
        {
            "subTitle": "",
            "content": "",
            "table": {
                "header": "",
                "content": []
            },
            "isHaveImage": true
        },
        {
            "subTitle": "",
            "content": "",
            "table": {
                "header": "",
                "content": []
            },
            "isHaveImage": false
        },
        {
            "subTitle": "",
            "content": "",
            "table": {
                "header": "",
                "content": []
            },
            "isHaveImage": false
        },
        {
            "subTitle": "",
            "content": "",
            "table": {
                "header": "",
                "content": []
            },
            "isHaveImage": false
        },
        {
            "subTitle": "",
            "content": "",
            "table": {
                "header": "",
                "content": []
            },
            "isHaveImage": false
        },
        {
            "subTitle": "",
            "content": "",
            "table": {
                "header": "",
                "content": []
            },
            "isHaveImage": false
        }
    ]
}